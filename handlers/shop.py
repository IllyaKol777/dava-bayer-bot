from aiogram import Router, F
from aiogram.types import Message
from keyboards.reply import shop_menu
from utils.texts import SHOP_TEXT
from database import async_session
from models import Product
from sqlalchemy import select
from keyboards.inline import product_buttons
from aiogram.types import FSInputFile
import os
import requests
import uuid


router = Router()

@router.message(F.text == "üõç –ú–∞–≥–∞–∑–∏–Ω")
async def open_shop(message: Message):
    await message.answer(SHOP_TEXT, reply_markup=shop_menu)

@router.message(F.text.in_({"üëñ –®—Ç–∞–Ω–∏", "üëï –•—É–¥—ñ", "ü©≥ –®–æ—Ä—Ç–∏", "üëü –í–∑—É—Ç—Ç—è", "üß¢ –ê–∫—Å–µ—Å—É–∞—Ä–∏", "üé© –®–∞–ø–∫–∏", "üß§ –†—É–∫–∞–≤–∏—Ü—ñ", "üëö –§—É—Ç–±–æ–ª–∫–∏", "üß• –ö—É—Ä—Ç–∫–∏ / –ñ–∏–ª–µ—Ç–∫–∏"}))
async def show_category(message: Message):
    category = message.text.split(' ', 1)[-1]

    async with async_session() as session:
        result = await session.execute(
            select(Product).where(Product.category == category)
        )
        products = result.scalars().all()

    if not products:
        await message.answer(f"üîç –ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î —Ç–æ–≤–∞—Ä—ñ–≤ —É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó <b>{category}</b>.", parse_mode="HTML")
        return

    for product in products:
        url = f"https://dava-bayer.onrender.com{product.photo}"
        
        # –ì–µ–Ω–µ—Ä—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω—É –Ω–∞–∑–≤—É
        unique_filename = f"{uuid.uuid4().hex}.jpg"
        caption = f"<b>{product.name}</b>\n{product.description}\nüíµ {product.price} –≥—Ä–Ω"

        try:
            # –°–∫–∞—á—É–≤–∞–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            response = requests.get(url)
            if response.status_code != 200:
                await message.answer("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–æ—Ç–æ ü•≤")
                return

            # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —É —Ñ–∞–π–ª
            with open(unique_filename, "wb") as f:
                f.write(response.content)

            # –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤ Telegram
            photo = FSInputFile(unique_filename)
            await message.answer_photo(
                photo=photo,
                caption=caption,    
                reply_markup=product_buttons(product.id),
                parse_mode="HTML"
            )

        finally:
            # –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ–∞–π–ª—É
            if os.path.exists(unique_filename):
                os.remove(unique_filename)
